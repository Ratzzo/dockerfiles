#boilerplate stuff
FROM ${MULTICONTAINER_BUILD_INHERIT_IMAGE}

#append old setup to setup chain
#only passing redefined variables
#inherited variables are kept
RUN touch /opt/setup_chain && \
    echo DOCKER_IMAGE=$DOCKER_IMAGE >> /opt/setup_chain && \
    echo DOCKER_SETUP=$DOCKER_SETUP >> /opt/setup_chain && \
    echo DOCKER_EP=$DOCKER_EP >> /opt/setup_chain && \
    echo ${DOCKER_SETUP} >> /opt/setup_chain && \
    chmod +x /opt/setup_chain || true
    
ENV DOCKER_IMAGE=${MULTICONTAINER_BUILD_IMAGE}
ENV DOCKER_SETUP=/opt/${MULTICONTAINER_BUILD_IMAGE_ESCAPED}_scripts/setup
ENV DOCKER_EP=/opt/${MULTICONTAINER_BUILD_IMAGE_ESCAPED}_scripts/entrypoint

## real docker stuff ##

RUN	apk add --no-cache shadow nginx mariadb mariadb-client php php-fpm php-curl \
    php-enchant php-gd php-iconv php-imap php-intl php-ldap php-mysqli php-odbc \
    php-opcache php-pdo_mysql php-pdo_sqlite php-soap php-sockets php-sqlite3 php-zip \
    php-session php-json php-phar php-openssl php-pear php81-dev gcc musl-dev g++ make openssl-dev
RUN touch /run/openrc/started/networking /run/openrc/started/machine-id && pear update-channels

#setup pear and install openswoole
#enable coroutine sockets? [no] : y
#enable openssl support? [no] : y
#enable http2 protocol? [no] : y
#enable coroutine mysqlnd? [no] : n
#enable coroutine curl? [no] : y
#enable coroutine postgres? [no] : n

RUN echo -en "y\ny\ny\nn\ny\nn\n" | pecl install openswoole

## end real docker stuff ##

ADD scripts /opt/${MULTICONTAINER_BUILD_IMAGE_ESCAPED}_scripts

#run build time setup script
RUN /opt/${MULTICONTAINER_BUILD_IMAGE_ESCAPED}_scripts/setup building

## real docker stuff ##



## end real docker stuff ##

ENTRYPOINT sh -c "/opt/setup_chain; cd $(dirname $DOCKER_EP); $DOCKER_EP"
