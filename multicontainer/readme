The complexity of the containers I manage has been getting out of hand.
The goal here is to provide a template container build with runtime dependencies that can
be inherited.

If everything works as planned I will move my stuff slowly to this system as I require it.

Docker multiarch build support needs a private registry.


The following was adapted from https://docs.docker.com/registry/recipes/nginx/

### create docker registry
# docker volume create registry

#### generate public password with GET | HEAD access for registry
# htpasswd -Bbn public public_password > docker_public.htpasswd

#### generate private password for pushing into the registry
# htpasswd -Bn testuser > docker_private.htpasswd

#### append private password to public password list
# cat docker_private.htpasswd >> docker_public.htpasswd

###run registry
# docker run --rm -d -p 127.0.0.1:5000:5000 -v registry:/var/lib/registry --name registry registry:latest
# docker login -u=testuser registry.domain.net:5100


#### REFERENCE NGINX PROXY CONFIG ####

  ## Set a variable to help us decide if we need to add the
  ## 'Docker-Distribution-Api-Version' header.
  ## The registry always sets this header.
  ## In the case of nginx performing auth, the header is unset
  ## since nginx is auth-ing before proxying.
  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
  }

  server {
    listen 5100 ssl;
    server_name registry.domain.net;

    # SSL
    ssl_certificate /opt/orange/etc/letsencrypt/live/registry.domain.net/fullchain.pem;
    ssl_certificate_key /opt/orange/etc/letsencrypt/live/registry.domain.net/privkey.pem;

    # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;
    
    ## If $docker_distribution_api_version is empty, the header is not added.
    ## See the map directive above where this variable is defined.
    
    location / {
        return 404;
    }
    
    location /v2 {
      
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }
      
      # To add basic authentication to v2 use auth_basic setting.
      add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
      
      #use public user for GET or HEAD
      if ($request_method ~* "^(GET|HEAD)$") {
         set $auth_basic_file /etc/nginx/conf.d/docker_public.htpasswd;
      }
      
      #use private user if not GET or head
      if ($request_method !~* "^(GET|HEAD)$") {
         set $auth_basic_file  /etc/nginx/conf.d/docker_private.htpasswd;
      }
      
      
      auth_basic            "Authenticate";
      auth_basic_user_file  $auth_basic_file;
      
      proxy_pass                          http://127.0.0.1:5000;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
    }
  }
